{"version":3,"sources":["index.jsx"],"names":["Square","props","className","clsname","onClick","value","OrderButton","Board","i","key","this","squares","Array","map","x","rowIndex","y","colIndex","keyValue","winnerPos","includes","renderSquare","React","Component","Game","state","history","fill","xIsNext","position","moveNumber","stepNumber","orderIsAsc","slice","length","calculateWinner","setState","concat","step","status","current","winner","isAsc","moves","move","desc","pos","col","row","Math","floor","calculatePosition","jumpTo","reverse","order","handleClick","handleOrder","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96af171e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n  return(\n    <button\n      className={`square ${props.clsname}`}\n      onClick={() => props.onClick()}>\n      {props.value}\n    </button>\n  )\n};\n\nfunction OrderButton(props){\n  return(\n    <button onClick={() => props.onClick()}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  renderSquare(i, clsname) {\n    return (\n      <Square \n        clsname={clsname}\n        key={i} \n        value={this.props.squares[i]} \n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render(){\n    const rowCount = 3, colCount = 3;\n      return (\n        <div>\n          {[ ...new Array(rowCount)].map((x, rowIndex) => {\n            return (\n              <div className=\"board-row\" key={rowIndex}>\n                {[ ...new Array(colCount)].map((y, colIndex) => {\n                  const keyValue = rowIndex * colCount + colIndex;\n                  const winnerPos = this.props.winnerPos;\n                  let clsname = '';\n                  if(winnerPos)\n                    clsname = winnerPos.includes(keyValue) ? 'square-winner' : '' ;\n                  return this.renderSquare(keyValue, clsname);\n                })}\n              </div>\n            )\n          })\n          }\n        </div>\n      );\n    }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        xIsNext: true,\n        position: null, // Know where is the click to calcute the square\n        moveNumber: 0,  // Ordering\n        winnerPos: new Array(3).fill(null), // Detect winner \n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      orderIsAsc: true, // Ordering\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber +1);\n    const current = history[history.length -1];\n    const squares = current.squares.slice();\n    if(calculateWinner(squares) || squares[i])\n      return;\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{ //concat doesnÂ´t mutate the original history as push() does.\n        squares: squares,\n        xIsNext: !this.state.xIsNext,\n        position: i,\n        moveNumber: history.length,\n        winnerPos: calculateWinner(squares, true),\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  handleOrder(){\n    this.setState({\n      orderIsAsc: !this.state.orderIsAsc,\n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const isAsc = this.state.orderIsAsc;\n\n    let moves = history.map((step, move) => {\n      const desc = step.moveNumber ?\n      `Go to Move #${step.moveNumber} : ${step.xIsNext ? 'O' : 'X'} in (${calculatePosition(step.position)})` :\n      'Go to start';\n      return (\n        <li key={step.moveNumber}>\n          <button onClick={() => this.jumpTo(step.moveNumber)}>\n           {this.state.stepNumber === step.moveNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      )\n    });\n\n    if(!isAsc)\n      moves = [ ...moves].reverse();\n\n    let status;\n    if(winner)\n      status = `Winner: ${winner}`;\n    else {\n      if(history.length == 10)\n        status = 'Draw!';\n      else\n        status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    let order = !this.state.orderIsAsc ? 'Order Ascending' : 'Order Descending';\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winnerPos={current.winnerPos}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div>\n            <OrderButton \n              onClick={() => this.handleOrder()}\n              value={order}\n            />\n          </div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares, returnWinner = false) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a,b,c];\n    }\n  }\n  return null;\n}\n\nfunction calculatePosition(pos) {\n  const col = 1 + pos % 3;\n  const row = 1 + Math.floor(pos / 3);\n  return [col, row];\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}